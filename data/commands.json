[null,{"name":"badges","permissions":"NONE","permissions2":"NONE","restriction":"1","_id":"BzyWz","actions":[{"channel":"0","varName":"","message":"Here are the results :D","buttons":[],"selectMenus":[],"attachments":[],"embeds":[],"reply":true,"ephemeral":false,"tts":false,"overwrite":false,"dontSend":false,"editMessage":"0","editMessageVarName":"","storage":"0","varName2":"","name":"Send Message"},{"behavior":"0","interpretation":"0","code":"const { Console } = require('console');\nconst https = require('https');\n\nconst isEnadled = false;\nconst badgesLimit = 200;\n\nvar Index = {\n    1319774652: \"Lab Victory\",\n    1319775539: \"Rigged Game\",\n    1319776909: \"Tried to win\",\n    1319781074: \"Lab Champ\",\n    1319781637: \"Lab Chaos\",\n    1319782031: \"Lab Insanity\",\n    1319782509: \"Lab Survivor\",\n    1319784520: \"Rank Champion\",\n    1319806446: \"Rank S\",\n    1319807820: \"Rank A\",\n    1319809474: \"Rank B\",\n    1319810666: \"Rank C\",\n    1319811527: \"Rank D\",\n    1319812690: \"Rank E\",\n    1319960753: \"Lava Trouble\",\n    1319961226: \"1 Stud left\",\n    1319962459: \"Lightning Strike\",\n    1319976215: \"Running out of time\",\n    1319981135: \"Cactus Hug\",\n    1319989829: \"Random Meteor\",\n    1320072251: \"A Little Spike\",\n    1320086259: \"Spinner Trouble\",\n    1320965045: \"Brains for days\",\n    1320972450: \"Experiment\",\n    1321004752: \"Disaster Starter\",\n    1321005233: \"Disaster Pro\",\n    1321005730: \"Disaster League\",\n    1321008604: \"Disaster Champ\",\n    1321008936: \"Disaster God\",\n    1379842585: \"Easy Obby\",\n    1379843067: \"Medium Obby\",\n    1379843475: \"Hard Obby\",\n    1379844932: \"The Host Boss\",\n    1379846628: \"Alien Boss\",\n    1379847572: \"Cloud Boss\",\n    1379848300: \"Jester Boss\",\n    1379849074: \"Fish Boss\",\n    1379849697: \"Squid Boss\",\n    1379850559: \"Wizard Boss\",\n    1379851111: \"Zombie Boss\",\n    1379851912: \"Scientist Boss\",\n    1379852502: \"Pumpkin Boss\",\n    2124444575: \"Old Insane Obby\",\n    2126861107: \"New Insane Obby\",\n}\n\nvar username = String(slashParams(\"Username\")); \nvar game = String(slashParams(\"Game\"));\nvar unowned = (slashParams(\"ShowUnowned\"));\nvar disabled = (slashParams(\"ShowDisabled\"));\nvar creator = String(slashParams(\"Creator\"));\nvar agoMode = String(slashParams(\"TimeMode\")) \n\nconsole.log(unowned,disabled)\n\nif (game == \"null\"){\n    game = \"Lab Experiment\"\n}\n\nif (unowned == null){\n    unowned = false\n}\nif (disabled == null){\n    disabled = true\n}\n\n\n\nif (game == \"null\"){\n    https.get(\"https://api.roblox.com/users/get-by-username?username=\"+username, (resp) => {\n        let data = '';\n        \n        // A chunk of data has been received.\n        resp.on('data', (chunk) => {\n            data += chunk;\n        });\n        \n        // The whole response has been received. Print out the result.\n        resp.on('end', () => {\n            var BadgesRequest = \"https://badges.roblox.com/v1/users/\"+Number(JSON.parse(data).Id)+\"/badges/awarded-dates?badgeIds=1319774652%2C1319775539%2C1319776909%2C1319781074%2C1319781637%2C1319782031%2C1319782509%2C1319784520%2C1319806446%2C1319807820%2C1319809474%2C1319810666%2C1319811527%2C1319812690%2C1319960753%2C1319961226%2C1319962459%2C1319976215%2C1319981135%2C1319989829%2C1320072251%2C1320086259%2C1320965045%2C1320972450%2C1321004752%2C1321005233%2C1321005730%2C1321008604%2C1321008936%2C1379842585%2C1379843067%2C1379843475%2C1379844932%2C1379846628%2C1379847572%2C1379848300%2C1379849074%2C1379849697%2C1379850559%2C1379851111%2C1379851912%2C1379852502%2C2124444575%2C2126861107\"\n            https.get(BadgesRequest, (resp2) => {\n            let data2 = '';\n        \n            // A chunk of data has been received.\n            resp2.on('data', (chunk) => {\n                data2 += chunk;\n            });\n        \n            // The whole response has been received. Print out the result.\n            resp2.on('end', () => {\n                var resultText = \"\"\n                const Discord = require('discord.js');\n                const { MessageEmbed } = require('discord.js')\n                const { inspect } = require('util')\n                const embed = new MessageEmbed()\n                embed.setTitle(username)\n                embed.setDescription(\"Game: \"+\"[Lab Experiment]\")\n                embed.setFooter(\"UTC+0 (Page 1)\")\n                embed.setColor('#0099ff')\n                console.log(2)\n                for (var i = 0; i < JSON.parse(data2).data.length; i++) {\n                    var ds = JSON.parse(data2).data[i][\"awardedDate\"]\n                    console.log(3)\n                    var resultText1 =String(Number(String(ds[8])+String(ds[9]))+\"/\"+Number(String(ds[5])+String(ds[6]))+\"/\"+Number(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\"\");\n                    var resultText2 =String(Index[JSON.parse(data2).data[i][\"badgeId\"]]);\n                    //var resultText3 = String(\" (\"+(String(ds[11])+String(ds[12]))+\":\"+(String(ds[14])+String(ds[15]))+\")\"); \n                    console.log(String(Number(String(ds[8])+String(ds[9]))+\"/\"+Number(String(ds[5])+String(ds[6]))+\"/\"+Number(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\" | \")+String(Index[JSON.parse(data2).data[i][\"badgeId\"]])+String(\" (\"+Number(String(ds[11])+String(ds[12]))+\":\"+Number(String(ds[14])+String(ds[15]))+\")\"));\n                    embed.addField(resultText2,resultText1,true)         \n                    console.log(4)\n                };\n        \n                console.log(resultText)\n                \n        \n            \n                channel.send({ embeds: [embed] });\n        \n                if (JSON.parse(data2).data.length > 25){\n                    const embed2 = new MessageEmbed()\n                    console.log(1)\n                    embed2.setTitle(username)\n                    embed2.setDescription(\"Uid: \"+String(Number(JSON.parse(data).data[0].id)))\n                    embed2.setFooter(\"UTC+0 (Page 2)\")\n                    embed2.setColor('#0099ff')\n                    for (var i = 25; i < JSON.parse(data2).data.length; i++) {\n                        var ds = JSON.parse(data2).data[i][\"awardedDate\"]\n                        console.log(3)\n                        var resultText1 =String(Number(String(ds[8])+String(ds[9]))+\"/\"+Number(String(ds[5])+String(ds[6]))+\"/\"+Number(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\"\");\n                        var resultText2 =String(Index[JSON.parse(data2).data[i][\"badgeId\"]]);\n                        var resultText3 = String(\" (\"+(String(ds[11])+String(ds[12]))+\":\"+(String(ds[14])+String(ds[15]))+\")\"); \n                        console.log(String(Number(String(ds[8])+String(ds[9]))+\"/\"+Number(String(ds[5])+String(ds[6]))+\"/\"+Number(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\" | \")+String(Index[JSON.parse(data2).data[i][\"badgeId\"]])+String(\" (\"+Number(String(ds[11])+String(ds[12]))+\":\"+Number(String(ds[14])+String(ds[15]))+\")\"));\n                        embed2.addField(resultText2,resultText1,true)         \n                        console.log(4)\n                    };\n                    channel.send({ embeds: [embed2] });\n                }\n                \n        \n        \n        \n            });\n            }).on(\"error\", (err) => {\n                console.log(\"Error: \" + err.message);\n            });\n        \n        });\n        \n        \n        \n        \n        \n        \n        }).on(\"error\", (err) => {\n        console.log(\"Error: \" + err.message);\n        });\n        \n        \n        \n        \n} else {\n    async function makeApiRequest(url) {\n        try {\n          const response = await new Promise((resolve, reject) => {\n            https.get(url, (response) => {\n              let data = '';\n              response.on('data', (chunk) => {\n                data += chunk;\n              });\n              response.on('end', () => {\n                resolve(data);\n              });\n            }).on('error', (error) => {\n              reject(error);\n            });\n          });\n          return JSON.parse(response);\n        } catch (error) {\n          // handle the error\n        }\n      }\n      \n      \n      \n//https://games.roblox.com/v1/games/list?keyword=lab\n//https://games.roblox.com/v1/games/multiget-place-details?placeIds=1229173778\n//https://badges.roblox.com/v1/universes/3405618667/badges?limit=100&sortOrder=Asc\n\n    var gameID;\n    var gameName;\n    var universeID;\n    var totalUpVotes;\n   \n    function getTimestamp(date) {\n        const [day, month, year] = date.split('/');\n        const datea = new Date(+year, month - 1, +day);\n        console.log(date); // 👉️ Sat Apr 16 2022\n        const timestamp = datea.getTime();\n        return timestamp\n    }\n    function countDifference(timestamp) {\n        var timeNow =  Math.floor(Date.now() / 1000)\n        timestamp = Number(timestamp/1000)\n        var seconds = Number(timeNow - timestamp)\n        console.log(seconds,timeNow , timestamp);\n        var d = Math.floor(seconds / (3600*24));\n        var h = Math.floor(seconds % (3600*24) / 3600);\n        var m = Math.floor(seconds % 3600 / 60);\n        var s = Math.floor(seconds % 60);\n        if (d > 0){\n            return d + \" days ago\"\n        } else if (h > 0){\n            return h + \" hours ago\"\n        } else if (m > 0){\n            return m + \" mins ago\"\n        } else {\n            return \"just now\"\n        }\n    }\n\n    async function main() {\n        const Discord = require('discord.js');\n        const { MessageEmbed } = require('discord.js')\n        const { inspect } = require('util')\n        var Index2 = {}\n        var badgesList = [];\n        var enabledList = [];\n        var requestA;\n        if (isNaN(game) == false && isEnadled){\n            gameID = game;\n            requestA = await makeApiRequest(\"https://games.roblox.com/v1/games/multiget-place-details?placeIds=\"+gameID);\n            console.log(requestA[\"name\"])\n            console.log(requestA[0])\n            console.log(requestA)\n            gameName = requestA[0][\"name\"];\n            gameID = requestA[0][\"placeId\"];\n            universeID = requestA[0][\"universeId\"];\n\n        }else if (game == \"Lab Experiment\"){\n            gameName = \"Lab Experiment\";\n            gameID = 1229173778;\n            universeID = 500227863;\n            totalUpVotes = 1;\n\n        }else{\n            gameName = game;\n            requestA = await makeApiRequest(\"https://games.roblox.com/v1/games/list?keyword=\"+gameName);\n            var whatId = 0;\n            for (var i = 0; i < requestA[\"games\"].length; i++){\n                console.log(requestA[\"games\"][i][\"creatorName\"].toLowerCase(),creator.toLowerCase(),requestA[\"games\"][i][\"name\"])\n                if (creator == \"null\"){\n                    console.log(\"NULLLLL\");\n                    whatId = 0;\n                }\n                if (requestA[\"games\"][i][\"creatorName\"].toLowerCase().includes(creator.toLowerCase())){\n                    whatId = i;\n                    break\n                }\n                if (i == requestA[\"games\"].length-1){\n                    whatId = 0;\n                    break\n                }\n            }\n\n            console.log(1);\n            gameName = requestA[\"games\"][whatId][\"name\"];\n            gameID = requestA[\"games\"][whatId][\"placeId\"];\n            universeID = requestA[\"games\"][whatId][\"universeId\"];\n            totalUpVotes = requestA[\"games\"][whatId][\"totalUpVotes\"];\n        }\n        \n        var totalenabledBadges = 0;      \n        var enabledBadges = 0;\n        var cursor = \"\";\n        while (true){  \n            var requestB = await makeApiRequest(\"https://badges.roblox.com/v1/universes/\"+universeID+\"/badges?limit=100&sortOrder=Asc\"+cursor);\n            console.log(3);\n            for (var i = 0; i < requestB[\"data\"].length; i++){\n                var disabledA = \"\";\n                if (requestB[\"data\"][i][\"enabled\"] == false){\n                    disabledA = \"(Disabled) \";\n                    enabledList.push(false);\n                } else {\n                    totalenabledBadges+=1;\n                    enabledList.push(true);\n                }\n                if (requestB[\"data\"][i][\"enabled\"] == true || disabled == true){\n                    Index2[requestB[\"data\"][i][\"id\"]] = disabledA+requestB[\"data\"][i][\"name\"];\n                    badgesList.push(requestB[\"data\"][i][\"id\"]);\n                }\n                //console.log(requestB[\"data\"][i][\"id\"],requestB[\"data\"][i][\"name\"]);\n            }\n            \n            console.log(Object.keys(Index2).length);\n            //console.log(Object.keys(Index2).length);\n            if (requestB[\"nextPageCursor\"] == null || Object.keys(Index2).length >= badgesLimit){\n                break;\n            } \n            cursor = \"&cursor=\"+requestB[\"nextPageCursor\"];\n        }\n        //console.log(Object.keys(Index2).length);\n        var toCheck = Object.keys(Index2).length;\n        var PlayerData = {};\n        var MakeRequests = [];\n        var requestC = await makeApiRequest(\"https://users.roblox.com/v1/users/search?keyword=\"+username+\"&limit=10\");\n        var userID = requestC.data[0].id;\n        username = requestC.data[0].name;\n        var countNow = 0;\n        console.log(7);\n        while (true){\n            newString = \"https://badges.roblox.com/v1/users/\"+userID+\"/badges/awarded-dates?badgeIds=\"\n            for (var i = 0; i < 100; i++){\n                if (toCheck <= 0){\n                    continue\n                }\n                newString+=badgesList[countNow+i]+\",\"\n                toCheck -=1;\n            }\n            countNow+=100;\n            console.log(8);\n            MakeRequests.push(newString.slice(0, -1));\n            if (toCheck <= 0){\n                break\n            }\n        }\n        console.log(MakeRequests);\n        console.log(MakeRequests.length);\n        for (var nnn = 0; nnn < MakeRequests.length; nnn++){\n            console.log(\"!\"+nnn)\n            var requestD = await makeApiRequest(MakeRequests[nnn]);\n            console.log(requestD)\n            for (var i = 0; i < requestD[\"data\"].length; i++){\n                var ds = requestD[\"data\"][i][\"awardedDate\"];\n                if (agoMode == \"ago\"){\n                    PlayerData[requestD[\"data\"][i][\"badgeId\"]] =  countDifference(getTimestamp(String((String(ds[8])+String(ds[9]))+\"/\"+(String(ds[5])+String(ds[6]))+\"/\"+(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\"\"))); \n                } else if (agoMode == \"mm-dd-yyyy\") {\n                    PlayerData[requestD[\"data\"][i][\"badgeId\"]] = String(Number(String(ds[5])+String(ds[6]))+\"/\"+Number(String(ds[8])+String(ds[9]))+\"/\"+Number(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\"\");\n                } else {\n                    PlayerData[requestD[\"data\"][i][\"badgeId\"]] = String(Number(String(ds[8])+String(ds[9]))+\"/\"+Number(String(ds[5])+String(ds[6]))+\"/\"+Number(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\"\");\n                }\n                //console.log(ds,requestD[\"data\"][i][\"badgeId\"])\n            }\n        }\n        console.log(10);\n        toCheck = badgesList.length;\n        countNow = 0;\n        var pageNow = 0;\n        var pageTotal = Math.ceil((Object.keys(PlayerData).length+1)/24);\n\n        for (var i = 0; i < badgesList.length; i++){\n            if (badgesList[i] in PlayerData && enabledList[i] == true){\n                enabledBadges+=1;\n            }\n        }\n        console.log(11);\n        var embeds_list = [];\n        while (true){\n            pageNow+=1\n            var needToSend = 24;\n            const embed = new MessageEmbed()\n            embed.setTitle(username)\n            embed.setDescription(\"GAME: \"+gameName)\n            var percentagebadges = Math.round(Object.keys(PlayerData).length/badgesList.length * 10000) / 100;\n            var percentagebadges1 = Math.round(enabledBadges/totalenabledBadges * 10000) / 100;\n            embed.setFooter(\"Enabled badges: \"+enabledBadges+\"/\"+totalenabledBadges+\" (\"+percentagebadges1+\"%)\\nTotal badges: \"+Object.keys(PlayerData).length+\"/\"+badgesList.length+\" (\"+percentagebadges+\"%)\\n(Page \"+pageNow+\"/\"+pageTotal+\") UTC+0\")\n            embed.setColor('#0099ff')\n            while (true){\n                if (unowned == false){\n                    if (badgesList[countNow] in PlayerData){\n                        embed.addField(Index2[badgesList[countNow]],PlayerData[badgesList[countNow]],true) \n                        needToSend-=1;\n                    }\n                }else{\n                    if (badgesList[countNow] in PlayerData){\n                        embed.addField(Index2[badgesList[countNow]],PlayerData[badgesList[countNow]],true) \n                        needToSend-=1;\n                    } else {\n                        console.log(Object.keys(Index2).length,countNow,badgesList[countNow])\n                        embed.addField(Index2[badgesList[countNow]],\"unowned\",true)\n                        needToSend-=1;\n                    }\n                }\n                if (needToSend <= 0){\n                    break\n                }\n                \n                if (countNow >=toCheck || Object.keys(Index2).length-1 <= countNow){\n                    embeds_list.push(embed)\n                    //channel.send({ embeds: [embed] });\n                    channel.send({ embeds: embeds_list }) \n                    return\n                }\n                countNow+=1\n            }\n            console.log(13);\n            embeds_list.push(embed)\n            //channel.send({ embeds: [embed] });\n            if (countNow >=toCheck || Object.keys(Index2).length-1 <= countNow){\n                channel.send({ embeds: embeds_list }) \n                return\n            }\n        }\n\n    }\n    main()\n      \n        \n\n\n    //console.log(\"end :)\");\n}\n","storage":"0","varName":"","name":"Run Script"}],"comType":"4","parameters":[{"name":"Username","description":"Type Any Valid Roblox Username","type":"STRING","required":true,"choices":null},{"name":"TimeMode","description":"Change the output date type (1/1/1970 or 15000 days ago)","type":"STRING","required":false,"choices":[{"name":"dd-mm-yyyy","value":"dd-mm-yyyy"},{"name":"ago","value":"ago"},{"name":"mm-dd-yyyy","value":"mm-dd-yyyy"}]},{"name":"Creator","description":"Type part of the creator name of the game for more accurate results (E.g. Sharkbyte)","type":"STRING","required":false,"choices":null},{"name":"ShowDisabled","description":"Show Badges that are no longer obtainable. (TRUE = Default)","type":"BOOLEAN","required":false,"choices":null},{"name":"ShowUnowned","description":"Show Badges that are in game but you do not own them. (FALSE= Default)","type":"BOOLEAN","required":false,"choices":null},{"name":"Game","description":"(Optional) Type the game name (E.g. Lab Experiment)","type":"STRING","required":false,"choices":null}],"description":"Returns Embed with User's badges timestamps"},{"name":"joindate","permissions":"NONE","permissions2":"NONE","restriction":"1","_id":"ObSnR","actions":[{"channel":"0","varName":"","message":"Here are the results :D","buttons":[],"selectMenus":[],"attachments":[],"embeds":[],"reply":true,"ephemeral":false,"tts":false,"overwrite":false,"dontSend":false,"editMessage":"0","editMessageVarName":"","storage":"0","varName2":"","name":"Send Message"},{"behavior":"0","interpretation":"0","code":"const { Console } = require('console');\nconst https = require('https');\n\nvar Index = {\n    1319774652: \"1 Win\",\n    1319775539: \"Rigged Game\",\n    1319776909: \"Tried to win\",\n    1319781074: \"Lab Champ\",\n    1319781637: \"Lab Chaos\",\n    1319782031: \"Lab Insanity\",\n    1319782509: \"Lab Survivor\",\n    1319784520: \"1000 Wins\",\n    1319806446: \"250 Wins\",\n    1319807820: \"100 Wins\",\n    1319809474: \"50 Wins\",\n    1319810666: \"25 Wins\",\n    1319811527: \"10 Wins\",\n    1319812690: \"5 Wins\",\n    1319960753: \"Lava Trouble\",\n    1319961226: \"1 Stud left\",\n    1319962459: \"Lightning Strike\",\n    1319976215: \"Running out of time\",\n    1319981135: \"Cactus Hug\",\n    1319989829: \"Random Meteor\",\n    1320072251: \"A Little Spike\",\n    1320086259: \"Spinner Trouble\",\n    1320965045: \"Brains for days\",\n    1320972450: \"0 Wins (Joined)\",\n    1321004752: \"Disaster Starter\",\n    1321005233: \"Disaster Pro\",\n    1321005730: \"Disaster League\",\n    1321008604: \"Disaster Champ\",\n    1321008936: \"Disaster God\",\n    1379842585: \"Easy Obby\",\n    1379843067: \"Medium Obby\",\n    1379843475: \"Hard Obby\",\n    1379844932: \"The Host Boss\",\n    1379846628: \"Alien Boss\",\n    1379847572: \"Cloud Boss\",\n    1379848300: \"Jester Boss\",\n    1379849074: \"Fish Boss\",\n    1379849697: \"Squid Boss\",\n    1379850559: \"Wizard Boss\",\n    1379851111: \"Zombie Boss\",\n    1379851912: \"Scientist Boss\",\n    1379852502: \"Pumpkin Boss\",\n    2124444575: \"Old Insane Obby\",\n    2126861107: \"New Insane Obby\",\n}\n\nvar allowedBadges = [\n    1320972450,\n    1319774652,\n    1319812690,\n    1319811527,\n    1319810666,\n    1319809474,\n    1319807820,\n    1319806446,\n    1319784520,\n]\n\nfunction getTimestamp(date) {\n    const [day, month, year] = date.split('/');\n    const datea = new Date(+year, month - 1, +day);\n    console.log(date); // 👉️ Sat Apr 16 2022\n    const timestamp = datea.getTime();\n    return timestamp\n}\nfunction countDifference(timestamp) {\n    var timeNow =  Math.floor(Date.now() / 1000)\n    timestamp = Number(timestamp/1000)\n    var seconds = Number(timeNow - timestamp)\n    console.log(seconds,timeNow , timestamp);\n    var d = Math.floor(seconds / (3600*24));\n    var h = Math.floor(seconds % (3600*24) / 3600);\n    var m = Math.floor(seconds % 3600 / 60);\n    var s = Math.floor(seconds % 60);\n    if (d > 0){\n        return d + \" days ago\"\n    } else if (h > 0){\n        return h + \" hours ago\"\n    } else if (m > 0){\n        return m + \" mins ago\"\n    } else {\n        return \"just now\"\n    }\n}\n\nvar username = String(slashParams(\"Username\"));\nvar agoMode = String(slashParams(\"TimeMode\")) \n\nhttps.get(\"https://users.roblox.com/v1/users/search?keyword=\"+username+\"&limit=10\", (resp) => {\nlet data = '';\n\n// A chunk of data has been received.\nresp.on('data', (chunk) => {\n    data += chunk;\n});\n\n// The whole response has been received. Print out the result.\nresp.on('end', () => {\n    var BadgesRequest = \"https://badges.roblox.com/v1/users/\"+Number(JSON.parse(data).data[0].id)+\"/badges/awarded-dates?badgeIds=1319774652%2C1319775539%2C1319776909%2C1319781074%2C1319781637%2C1319782031%2C1319782509%2C1319784520%2C1319806446%2C1319807820%2C1319809474%2C1319810666%2C1319811527%2C1319812690%2C1319960753%2C1319961226%2C1319962459%2C1319976215%2C1319981135%2C1319989829%2C1320072251%2C1320086259%2C1320965045%2C1320972450%2C1321004752%2C1321005233%2C1321005730%2C1321008604%2C1321008936%2C1379842585%2C1379843067%2C1379843475%2C1379844932%2C1379846628%2C1379847572%2C1379848300%2C1379849074%2C1379849697%2C1379850559%2C1379851111%2C1379851912%2C1379852502%2C2124444575%2C2126861107\"\n    https.get(BadgesRequest, (resp2) => {\n    let data2 = '';\n\n    // A chunk of data has been received.\n    resp2.on('data', (chunk) => {\n        data2 += chunk;\n    });\n\n    // The whole response has been received. Print out the result.\n    resp2.on('end', () => {\n        var resultText = \"\"\n        const Discord = require('discord.js');\n        const { MessageEmbed } = require('discord.js')\n        const { inspect } = require('util')\n        const embed = new MessageEmbed()\n        console.log(1)\n        embed.setTitle(String(JSON.parse(data).data[0].name))\n        embed.setDescription(\"Uid: \"+String(Number(JSON.parse(data).data[0].id)))\n        embed.setFooter(\"UTC+0 \")\n        embed.setColor('#0099ff')\n        console.log(2)\n\n        for (var q = 0; q < allowedBadges.length; q++) {\n            for (var i = 0; i < JSON.parse(data2).data.length; i++) {\n                if (JSON.parse(data2).data[i][\"badgeId\"] == allowedBadges[q]){\n                    var ds = JSON.parse(data2).data[i][\"awardedDate\"]\n                    var resultText1;\n                    var resultText2;\n                    var resultText3;\n\n                    if (agoMode == \"ago\"){\n                        resultText3 = \"\";\n                        resultText1 = countDifference(getTimestamp(String((String(ds[8])+String(ds[9]))+\"/\"+(String(ds[5])+String(ds[6]))+\"/\"+(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\"\"))); \n                    } else if (agoMode == \"mm-dd-yyyy\") {\n                        resultText3 = String(\" (\"+(String(ds[11])+String(ds[12]))+\":\"+(String(ds[14])+String(ds[15]))+\")\"); \n                        resultText1 = String(Number(String(ds[5])+String(ds[6]))+\"/\"+Number(String(ds[8])+String(ds[9]))+\"/\"+Number(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\"\");\n                    } else {\n                        resultText3 = String(\" (\"+(String(ds[11])+String(ds[12]))+\":\"+(String(ds[14])+String(ds[15]))+\")\"); \n                        resultText1 = String(Number(String(ds[8])+String(ds[9]))+\"/\"+Number(String(ds[5])+String(ds[6]))+\"/\"+Number(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\"\");\n                    }\n\n                    \n                    resultText2 =String(Index[JSON.parse(data2).data[i][\"badgeId\"]]);\n                    \n                    console.log(String(Number(String(ds[8])+String(ds[9]))+\"/\"+Number(String(ds[5])+String(ds[6]))+\"/\"+Number(String(ds[0])+String(ds[1])+String(ds[2])+String(ds[3]))+\" | \")+String(Index[JSON.parse(data2).data[i][\"badgeId\"]])+String(\" (\"+Number(String(ds[11])+String(ds[12]))+\":\"+Number(String(ds[14])+String(ds[15]))+\")\"));\n                    embed.addField(resultText2,resultText1+resultText3,true)  \n                }\n            };\n        };\n        \n\n        console.log(resultText)\n        \n\n    \n        channel.send({ embeds: [embed] });   \n    });\n    }).on(\"error\", (err) => {\n        console.log(\"Error: \" + err.message);\n    });\n\n});\n\n\n\n\n\n\n}).on(\"error\", (err) => {\nconsole.log(\"Error: \" + err.message);\n});","storage":"0","varName":"","name":"Run Script"}],"comType":"4","parameters":[{"name":"username","description":"Type Valid Roblox Username","type":"STRING","required":true,"choices":null},{"name":"TimeMode","description":"Change the output date type (1/1/1970 or 15000 days ago)","type":"STRING","required":false,"choices":[{"name":"ago","value":"ago"},{"name":"mm-dd-yyyy","value":"mm-dd-yyyy"},{"name":"dd-mm-yyyy","value":"dd-mm-yyyy"}]}],"description":"Returns the joindate (of lab experiment)"},{"name":"chat","permissions":"NONE","permissions2":"NONE","restriction":"4","_id":"FtXoR","actions":[{"behavior":"0","interpretation":"0","code":"'use strict';\n\nconst fs = require('fs');\nconst exec  = require('child_process').exec;\n\nlet student = [\n    [String(slashParams(\"1message-color\")),String(slashParams(\"1username\")),String(slashParams(\"1message\"))],\n    [String(slashParams(\"2message-color\")),String(slashParams(\"2username\")),String(slashParams(\"2message\"))],\n    [String(slashParams(\"3message-color\")),String(slashParams(\"3username\")),String(slashParams(\"3message\"))],\n    [String(slashParams(\"4message-color\")),String(slashParams(\"4username\")),String(slashParams(\"4message\"))],\n    [String(slashParams(\"5message-color\")),String(slashParams(\"5username\")),String(slashParams(\"5message\"))],\n    [String(slashParams(\"6message-color\")),String(slashParams(\"6username\")),String(slashParams(\"6message\"))],\n];\n\nfs.writeFileSync(\"D:/Lab Experiment BOT/temp/data.json\", JSON.stringify(student));\n\n\nconsole.log(\"rrrr\");\nexec(\"C:/Users/gfvwe/LabBotPYTHON/env/LabChatMaker.pyw\", function(err, data) {\n\n    console.log(err)\n    console.log(data.toString());\n});\n","storage":"0","varName":"","name":"Run Script"},{"channel":"0","varName":"","message":"generating... :fire:","buttons":[],"selectMenus":[],"attachments":[],"embeds":[],"reply":true,"ephemeral":false,"tts":false,"overwrite":false,"dontSend":false,"editMessage":"0","editMessageVarName":"","storage":"0","varName2":"","name":"Send Message"},{"time":"3","measurement":"1","name":"Wait"},{"channel":"102","varName":"lab-commands","file":"resources\\result.png","message":"here is your result :w","name":"Send File"}],"comType":"4","parameters":[{"name":"1username","description":"Type username of chatter, leave blank or dont for \"death\" and \"system\" color","type":"STRING","required":false,"choices":null},{"name":"1message","description":"Type the message content here","type":"STRING","required":false,"choices":null},{"name":"1message-color","description":"Select the color (mode) of the message","type":"STRING","required":false,"choices":[{"name":"vip-lobby","value":"vip-lobby"},{"name":"vip-playing","value":"vip-playing"},{"name":"vip-ghost","value":"vip-ghost"},{"name":"server","value":"server"},{"name":"lobby","value":"lobby"},{"name":"playing","value":"playing"},{"name":"ghost","value":"ghost"},{"name":"creator-lobby","value":"creator-lobby"},{"name":"creator-playing","value":"creator-playing"},{"name":"creator-ghost","value":"creator-ghost"},{"name":"death","value":"death"}]},{"name":"2username","description":"Type username of chatter, leave blank or dont for \"death\" and \"system\" color","type":"STRING","required":false,"choices":null},{"name":"2message","description":"Type the message content here","type":"STRING","required":false,"choices":null},{"name":"2message-color","description":"Select the color (mode) of the message","type":"STRING","required":false,"choices":[{"name":"vip-lobby","value":"vip-lobby"},{"name":"vip-playing","value":"vip-playing"},{"name":"vip-ghost","value":"vip-ghost"},{"name":"server","value":"server"},{"name":"lobby","value":"lobby"},{"name":"playing","value":"playing"},{"name":"ghost","value":"ghost"},{"name":"creator-lobby","value":"creator-lobby"},{"name":"creator-playing","value":"creator-playing"},{"name":"creator-ghost","value":"creator-ghost"},{"name":"death","value":"death"}]},{"name":"3username","description":"Type username of chatter, leave blank or dont for \"death\" and \"system\" color","type":"STRING","required":false,"choices":null},{"name":"3message","description":"Type the message content here","type":"STRING","required":false,"choices":null},{"name":"3message-color","description":"Select the color (mode) of the message","type":"STRING","required":false,"choices":[{"name":"vip-lobby","value":"vip-lobby"},{"name":"vip-playing","value":"vip-playing"},{"name":"vip-ghost","value":"vip-ghost"},{"name":"server","value":"server"},{"name":"lobby","value":"lobby"},{"name":"playing","value":"playing"},{"name":"ghost","value":"ghost"},{"name":"creator-lobby","value":"creator-lobby"},{"name":"creator-playing","value":"creator-playing"},{"name":"creator-ghost","value":"creator-ghost"},{"name":"death","value":"death"}]},{"name":"4username","description":"Type username of chatter, leave blank or dont for \"death\" and \"system\" color","type":"STRING","required":false,"choices":null},{"name":"4message","description":"Type the message content here","type":"STRING","required":false,"choices":null},{"name":"4message-color","description":"Select the color (mode) of the message","type":"STRING","required":false,"choices":[{"name":"vip-lobby","value":"vip-lobby"},{"name":"vip-playing","value":"vip-playing"},{"name":"vip-ghost","value":"vip-ghost"},{"name":"server","value":"server"},{"name":"lobby","value":"lobby"},{"name":"playing","value":"playing"},{"name":"ghost","value":"ghost"},{"name":"creator-lobby","value":"creator-lobby"},{"name":"creator-playing","value":"creator-playing"},{"name":"creator-ghost","value":"creator-ghost"},{"name":"death","value":"death"}]},{"name":"5username","description":"Type username of chatter, leave blank or dont for \"death\" and \"system\" color","type":"STRING","required":false,"choices":null},{"name":"5message","description":"Type the message content here","type":"STRING","required":false,"choices":null},{"name":"5message-color","description":"Select the color (mode) of the message","type":"STRING","required":false,"choices":[{"name":"vip-lobby","value":"vip-lobby"},{"name":"vip-playing","value":"vip-playing"},{"name":"vip-ghost","value":"vip-ghost"},{"name":"server","value":"server"},{"name":"lobby","value":"lobby"},{"name":"playing","value":"playing"},{"name":"ghost","value":"ghost"},{"name":"creator-lobby","value":"creator-lobby"},{"name":"creator-playing","value":"creator-playing"},{"name":"creator-ghost","value":"creator-ghost"},{"name":"death","value":"death"}]},{"name":"6username","description":"Type username of chatter, leave blank or dont for \"death\" and \"system\" color","type":"STRING","required":false,"choices":null},{"name":"6message","description":"Type the message content here","type":"STRING","required":false,"choices":null},{"name":"6message-color","description":"Select the color (mode) of the message","type":"STRING","required":false,"choices":[{"name":"vip-lobby","value":"vip-lobby"},{"name":"vip-playing","value":"vip-playing"},{"name":"vip-ghost","value":"vip-ghost"},{"name":"server","value":"server"},{"name":"lobby","value":"lobby"},{"name":"playing","value":"playing"},{"name":"ghost","value":"ghost"},{"name":"creator-lobby","value":"creator-lobby"},{"name":"creator-playing","value":"creator-playing"},{"name":"creator-ghost","value":"creator-ghost"},{"name":"death","value":"death"}]}],"description":"this command is not working right now"},{"name":"curren-research-level","permissions":"NONE","permissions2":"NONE","restriction":"1","_id":"olQwk","actions":[{"channel":"0","varName":"","message":"*good luck with grinding*","buttons":[],"selectMenus":[],"attachments":[],"embeds":[],"reply":true,"ephemeral":false,"tts":false,"overwrite":false,"dontSend":false,"editMessage":"0","editMessageVarName":"","storage":"0","varName2":"","name":"Send Message"},{"behavior":"0","interpretation":"0","code":"const Discord = require('discord.js');\nconst { Console } = require('console');\n\nvar a= parseInt((slashParams(\"current-level\")));\nvar b= parseInt((slashParams(\"current-research\")));\nvar c= a\nvar d= b\n\nfunction newString(x) {\n    return String(x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n}\n\nif (b>100000000){\n   channel.send(\"**\" +  \"wow, are you really trying to tell me that you have\" +  newString(b) + \" researches,... haha, nice one**\")\n} else {\nwhile (true) {\n    b -= (c+1)*5\n    if (b < 0){\n        break\n    }\n    c++;\n  }\nchannel.send(\"**\" + newString(c) + \" Level** can be reached with \"+ newString(d) +\"  research from level \"+newString(a))\n}\n\n\n","storage":"0","varName":"","name":"Run Script"}],"comType":"4","description":"Returns number of Research needed for leveling up.","parameters":[{"name":"current-level","description":"type your current level","type":"INTEGER","required":true,"choices":null},{"name":"current-research","description":"Insert the number of research you currently have","type":"STRING","required":true,"choices":null}]},{"name":"level-research","permissions":"NONE","permissions2":"NONE","restriction":"1","_id":"yehDu","actions":[{"channel":"0","varName":"","message":"*good luck with grinding*","buttons":[],"selectMenus":[],"attachments":[],"embeds":[],"reply":true,"ephemeral":false,"tts":false,"overwrite":false,"dontSend":false,"editMessage":"0","editMessageVarName":"","storage":"0","varName2":"","name":"Send Message"},{"behavior":"0","interpretation":"0","code":"const Discord = require('discord.js');\nconst { Console } = require('console');\n\nvar a= parseInt((slashParams(\"current-level\")));\nvar b= parseInt((slashParams(\"goal-level\")));\nvar c= 0\n\nfunction newString(x) {\n    return String(x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n}\n\nif (a>0){\n    console.log(a,\"yay\")\n} else {\na = 0;\n}\n\nc = (c=b*(b+1)*2.5-a*(a+1)*2.5)\n\nchannel.send(\"**\" + newString(c) + \" Research** is needed to reach level \"+ newString(b) +\" from level \"+newString(a))","storage":"0","varName":"","name":"Run Script"}],"comType":"4","parameters":[{"name":"current-level","description":"type the current number of levels you have","type":"INTEGER","required":false,"choices":null},{"name":"goal-level","description":"type the level you want to reach","type":"INTEGER","required":true,"choices":null}],"description":"Find out how many research you need to reach certain level"},{"name":"rebirth","permissions":"NONE","permissions2":"NONE","restriction":"1","_id":"fDtZK","actions":[{"channel":"0","varName":"","message":"Here are the results :D","buttons":[],"selectMenus":[],"attachments":[],"embeds":[],"reply":true,"ephemeral":false,"tts":false,"overwrite":false,"dontSend":false,"editMessage":"0","editMessageVarName":"","storage":"0","varName2":"","name":"Send Message"},{"behavior":"0","interpretation":"0","code":"const Discord = require('discord.js');\nconst { Console } = require('console');\n\nvar current= parseInt((slashParams(\"current-rebirth\")));\nvar goal = parseInt((slashParams(\"goal-rebirth\")));\nvar average = parseInt((slashParams(\"average-credits-per-game\")));\n\nfunction newString(x) {\n    return String(x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"));\n}\n\nif (current>0){\n    console.log(current,\"yay\")\n} else {\n    current = 0;\n}\n\nif (average>0){\n    console.log(average,\"yay\")\n} else {\n    average = 40*((((current+goal)/2)+1)*5)+3000;\n}\nvar estaverage = 40*((((current+goal)/2)+1)*5)+3000;\nvar creditsNeeded = 25000*(goal-current)*(goal-current)+75000*(goal-current)\nvar researchNeeded = 150*(goal-current)*(goal-current)+50*(goal-current)\n\nif (estaverage > average*2 || estaverage < average/2){\n    channel.send(\"[!] Your average credits/round may be inaccurate, it should be around ~\"+newString(estaverage)+\", but alright...\")\n}\n\nchannel.send(\"to reach **x\"+newString(goal)+\" Rebirth** from x\"+newString(current)+\" Rebirth\\nyou need: **\"+newString(creditsNeeded)+\" Credits** and **\"+newString(researchNeeded)+\" Research**\\nThis will take about **\"+newString(Math.round(creditsNeeded/average))+\" rounds** (~\"+newString(average)+\" credits/round)\")\n\n\n\n\n","storage":"0","varName":"","name":"Run Script"}],"comType":"4","parameters":[{"name":"current-rebirth","description":"type the current rebirth you have now","type":"INTEGER","required":false,"choices":null},{"name":"goal-rebirth","description":"type the number of rebirths you want to reach","type":"INTEGER","required":true,"choices":null},{"name":"average-credits-per-game","description":"type the average number of credits you get per 1 round (include winning credits)","type":"INTEGER","required":false,"choices":null}],"description":"Returns the number of Credits, Research and number oRounds you need to reach certain Rebirth "},{"name":"set-nights-icon-happy","permissions":"NONE","permissions2":"NONE","restriction":"4","_id":"sWhWl","actions":[{"storage":"1","varName":"image","changeType":"0","value":"https://cdn.discordapp.com/attachments/454146480609951754/1087772512894595072/night1.png","name":"Control Variable"},{"role":"101","roleVarName":"1024427001609723904","image":"1","imageVarName":"image","reason":"","name":"Set Role Icon"}],"comType":"4","parameters":[],"description":"change night's role icon in a minute"},{"name":"get-ip-address","permissions":"NONE","permissions2":"NONE","restriction":"1","_id":"oAWvM","actions":[{"channel":"0","varName":"","message":"searching in the database :mag:","buttons":[],"selectMenus":[],"attachments":[],"embeds":[],"reply":true,"ephemeral":false,"tts":false,"overwrite":false,"dontSend":false,"editMessage":"0","editMessageVarName":"","storage":"0","varName2":"","name":"Send Message"},{"behavior":"0","interpretation":"0","code":"const { createHash } = require('crypto');\nconst countries = require('i18n-iso-countries');\n\nfunction generateIPv4Address(seedString) {\n  // Create a hash of the seed string using SHA-256\n  const hash = createHash('sha256').update(seedString).digest();\nconsole.log(hash,\"131\");\n  \n  const octet1 = 0;\n  const octet2 = hash[1];\n  const octet3 = hash[2];\n  const octet4 = hash[3];\n\n  // Return the IPv4 address as a string\n  return String(octet2)+\".\"+String(octet1)+\".\"+String(octet3)+\".\"+String(octet4);\n}\n\nfunction selectRandomCountry(seedString) {\n  // Create a hash of the seed string using SHA-256\n  const hash = createHash('sha256').update(seedString).digest();\n\n  // Extract a number from the hash and use it to select a random country code\n  const countryCodes = Object.keys(countries.getAlpha2Codes());\n  const randomIndex = hash.readUInt32BE(0) % countryCodes.length;\n  const randomCountryCode = countryCodes[randomIndex];\n\n  // Return the random country name\n  return countries.getName(randomCountryCode, 'en');\n}\n\n// Example usage:\nconst username = String(slashParams(\"username\")).replace(/@/g, '');\nconsole.log(username);\nconsole.log(125);\nconst ipv4Address = generateIPv4Address(username.toUpperCase());\nconsole.log(ipv4Address);\n\nvar countryName = selectRandomCountry(username.toUpperCase());\nconsole.log(countryName);\n\nif (username == \"131\"){\ncountryName = \"Czech Republic\";\n}if (username == \"playroom-is-the-best-6585914613\"){\ncountryName = \"Czech Republic\";\n}\n  \nchannel.send(\"**\" + String(username) + \"'s IP address is \"+ String(ipv4Address) +\"**\\n(located in \"+ String(countryName) + \")\")\n\n\n","storage":"0","varName":"","name":"Run Script"}],"comType":"4","parameters":[{"name":"username","description":"type the username of the person","type":"STRING","required":true,"choices":null}],"description":"Get the ip adress of any roblox user (April's fool)"},{"name":"set-nights-icon-sad","permissions":"NONE","permissions2":"NONE","restriction":"4","_id":"BFuSv","actions":[{"storage":"1","varName":"image","changeType":"0","value":"https://cdn.discordapp.com/attachments/454146480609951754/1087772512634552411/night2.png","name":"Control Variable"},{"role":"101","roleVarName":"1024427001609723904","image":"1","imageVarName":"","reason":"","name":"Set Role Icon"}],"comType":"4","parameters":[],"description":"change night's role icon in a minute"}]